apiVersion: choreo.kform.dev/v1alpha1
kind: Library
metadata:
  annotations:
    api.choreo.kform.dev/origin: '{"kind":"File"}'
  creationTimestamp: "2024-10-01T07:10:05Z"
  managedFields:
  - apiVersion: choreo.kform.dev/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:api.choreo.kform.dev/origin: {}
      f:spec:
        .: {}
        f:code: {}
        f:type: {}
      f:status: {}
    manager: inputfileloader
    operation: Apply
    time: "2024-10-01T07:10:05Z"
  name: api.k8s.io.object.star
  resourceVersion: "0"
  uid: 2b772046-74e9-40a8-8b6b-50b2ed0bcde9
spec:
  code: |-
    def getMetadata(self):
      return self.get("metadata", {})

    def getName(self):
      metadata = getMetadata(self)
      return metadata.get("name", "")

    def getNamespace(self):
      metadata = getMetadata(self)
      return metadata.get("namespace", "default")

    def getDeletionTimestamp(self):
      metadata = getMetadata(self)
      return metadata.get("deletionTimestamp", None)

    def getLabels(self):
      metadata = getMetadata(self)
      return metadata.get("labels", {})

    def getAnnotations(self):
      metadata = getMetadata(self)
      return metadata.get("annotations", {})

    def getFinalizers(self):
      metadata = getMetadata(self)
      return metadata.get("finalizers", [])

    def setFinalizers(self, finalizers):
      metadata = getMetadata(self)
      metadata["finalizers"] = finalizers

    def setFinalizer(self, finalizer):
      found = False
      finalizers = getFinalizers(self)
      for finalizerstr in finalizers:
        if finalizerstr == finalizer:
          found = True
          break
      if not found:
        finalizers.append(finalizer)
      setFinalizers(self, finalizers)

    def delFinalizer(self, finalizer):
      found = False
      idx = 0
      finalizers = getFinalizers(self)
      for i, finalizerstr in enumerate(finalizers):
        if finalizerstr == finalizer:
          found = True
          idx = i
          break
      if found:
        finalizers = finalizers[:idx] + finalizers[idx + 1:]
        setFinalizers(self, finalizers)

    def getSpec(self):
      return self.get("spec", {})

    def getStatus(self):
      return self.get("status", {})
  type: starlark
status: {}
