apiVersion: choreo.kform.dev/v1alpha1
kind: Reconciler
metadata:
  annotations:
    api.choreo.kform.dev/origin: '{"kind":"File"}'
  creationTimestamp: null
  name: example.com.helloworlds.helloworld
spec:
  code:
    reconciler.star: "load(\"api.k8s.io.object.star\", \"getName\", \"getNamespace\",
      \"getDeletionTimestamp\", \"delFinalizer\", \"setFinalizer\", \"getSpec\")\n\nfinalizer
      = \"greeting.example.com/ready\"\nconditionType = \"Ready\"\n\ndef reconcile(self):\n
      \ # self = helloworld\n\n  if getDeletionTimestamp(self) != None:\n    rsp =
      client_delete()\n    if rsp[\"error\"] != None:\n      return reconcile_result(self,
      True, 0, conditionType, rsp[\"error\"], rsp[\"fatal\"])\n    \n    delFinalizer(self,
      finalizer)\n    return reconcile_result(self, False, 0, conditionType, \"\",
      False)\n  \n  setFinalizer(self, finalizer)\n\n  rsp = client_create(getGreeting(self))\n
      \ if rsp[\"error\"] != None:\n    return reconcile_result(self, True, 0, conditionType,
      rsp[\"error\"], rsp[\"fatal\"])\n\n  rsp = client_apply()\n  if rsp[\"error\"]
      != None:\n    return reconcile_result(self, True, 0, conditionType, rsp[\"error\"],
      rsp[\"fatal\"])\n  return reconcile_result(self, False, 0, conditionType, \"\",
      False)\n\ndef getGreeting(helloworld):\n  return {\n    \"apiVersion\": \"example.com/v1alpha1\",\n
      \   \"kind\": \"Greeting\",\n    \"metadata\": {\n        \"name\": getName(helloworld),\n
      \       \"namespace\": getNamespace(helloworld),\n    },\n    \"spec\": {\n
      \     \"message\": getGreetingMsg(helloworld)\n    },\n  }\n\ndef getGreetingMsg(self):\n
      \ spec = getSpec(self)\n  return spec.get(\"greeting\", \"hi choreo, how are
      you?\")\n"
  for:
    group: example.com
    kind: HelloWorld
    selector: {}
    version: v1alpha1
  owns:
  - group: example.com
    kind: Greeting
    version: v1alpha1
  type: starlark
status: {}
